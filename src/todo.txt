test

{ok, Pid} = tcp_test_async_handler:start_link().
tcp_async_listener:start_link(name11, {tcp_test_async_handler, Pid}, 8088).


supervisor 
--------------------------------------
child프로세스로 등록할 때 gen_server/gen_fsm/gen_event가 아닌면 child로 등록안되는것 같음.
아마도 child Module:init에서 return 해야줘야 할것 같은데.
내가 만든 tcp_async_listener에서는 return 하지 않고 loop돌아서 그런듯.

A   child process 생성 소멸 테스트 하기
    - 죽으면 다시 살아 나는가?
    - 하나의 supervisor에서 2개 이상의 Module의 child등록 할 수 있나? simple_one_for_one인 경우
    - 하나의 supervisor에서 2개 이상의 Module의 child등록 할 수 있나? one_for_one인 경우
    one_for_one
    simple_one_for_one 


async socket
---------------------------------------
A   async accept
    - async accept 하지 않고 여러 process에서 하면 될 듯. 
    그럼 gen_server 로 만들기 애메한데. 
    그리고, supervisor에서 제어 가능한지 확이 필요함. gen_server로 만들고 timeout걸어도 될것 같음.   
*A   async recv
    - 완료

A   tcp_async_receiver.erl에 gen_server의 pid를 념겨서 데이터를 받으면 로직처리 하도록 분리함.  
    module을 넘겨서 함수를 호출 할려고 했으니, client socket여러개를 한개 process에서 처리 가능해서 
    메시지 받으면 처리하는 process에게 넘기는 것이 더 좋을 것 같음. 



채널서버 개발관련
---------------------------------------
S   전체적인 설계
A   설계를 바탕으로 로그인/로그아웃/상태변경 구현
A   채팅방 만들기/들어가기/나가기 구현
A   채팅방 목록 보기




기타
---------------------------------------
B   tcp_receive.erl  모듈명 변경
A   mua_sup, mua_app 사용해서 서버 생성하기, 지금까지 tcp_xxxx로 바로 테스트 했음.


